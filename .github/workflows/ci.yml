name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lan_bic_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Lint Backend
      working-directory: ./backend
      run: |
        npm run lint
        npm run format:check

    - name: Lint Frontend
      working-directory: ./frontend
      run: |
        npm run lint
        npm run format:check

    - name: Run Backend Tests
      working-directory: ./backend
      run: |
        npm run test
        npm run test:e2e
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DATABASE: lan_bic_test
        JWT_SECRET: test_secret

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm run test

    - name: Build Backend
      working-directory: ./backend
      run: npm run build

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci

    - name: Run Backend Security Audit
      working-directory: ./backend
      run: npm audit --audit-level=high

    - name: Run Frontend Security Audit
      working-directory: ./frontend
      run: npm audit --audit-level=high

    - name: Run Dependency Check
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high