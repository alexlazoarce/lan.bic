name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lan_bic_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Lint check
      working-directory: ./backend
      run: |
        npm run lint
        npm run format:check

    - name: Run tests
      working-directory: ./backend
      run: |
        npm run test
        npm run test:e2e
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DATABASE: lan_bic_test
        JWT_SECRET: test_secret

    - name: Build check
      working-directory: ./backend
      run: npm run build

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run security audit
      working-directory: ./backend
      run: npm audit

    - name: Run dependency check
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high